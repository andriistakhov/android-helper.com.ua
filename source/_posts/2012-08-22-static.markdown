---
author: andrew
comments: true
date: 2012-08-22 04:50:57+00:00
layout: post
slug: static
title: Сбор статистики в приложении на Android
wordpress_id: 442
categories:
- Памятка разработчику
- Программирование
---

Сегодня нашел очень интересную статью.





Вот ее содержание:





Всегда интересно знать, как пользователи работают с вашим приложением: какие функции наиболее востребованы, какие кнопки нажимаются, какие настройки меняются, какие ошибки совершаются. Неплохо так же представлять себе, что это за пользователи - какая версия прошивки у их девайсов, где они географически расположены и т.д. 





Такая информация неоценима для разработчика, ведь с ее помощью можно оптимизировать юзабилити, определиться с приоритеностью функционала, найти пути повышения продаж. Вопрос только как такую статистику собирать.


<!-- more -->


Самый простой путь - воспользоваться готовой системой сбора аналитической информации. Таких систем сейчас более чем достаточно ([1](http://www.foundersspace.com/tech/whats-the-best-analytics-service-for-apps/), [2](http://www.quora.com/What-is-the-best-Mobile-Analytics-service-for-iOS-apps-and-why)). Например:У каждой системы есть свои изюминки: real-time обновление статистики (Localitics), суперточность с отслеживанием уникальных ID каждого пользователя (Bango), наличие средств для проведения опроса пользователей (Apsalar), наличие средств для регулярной отправки уведомлений пользователям (BuzzBox) и т.д. Естественно, есть и море отличий: в интерфейсе, в средствах анализа, в наличии дополнительных API, в стоимости, в наборе поддерживаемых платформ и т.п. 





Принцип работы у всех систем примерно одинаков. Регистрируемся на сайте системы, получаем SDK и уникальный ключ. В приложение подключаем стороннюю библиотеку (единственный jar-файл из SDK). Добавляем код вызова функций, регистрирующих события в приложении. Релизим приложение. Ждем некоторое время, пока пользователи поработают в программе. Заходим на сайт системы и смотрим разнообразные аналитические отчеты. 





Вот, например, как ведется сбор данных в Apsalar:


	import com.apsalar.sdk.Apsalar;



	public void onCreate(Bundle savedInstanceState) {

	...

		Apsalar.startSession(this, "myapikey", "mypassword");

	..

	}



	/** уровень level пройден за countSeconds */

	public void onLevelPassed(int level, int countSeconds) {

	...

  	Apsalar.event("passed", "level", level, "duration", countSeconds);

	...

	}



API, как видите, тривиальное, так что технически добавить код для фиксации событий в приложении совсем не сложно. Количество событий и количество атрибутов у каждого события не ограничено, поэтому детализация собираемой информации может быть весьма высокой. 





Конечно, подобные системы сбора информации - это, прежде всего, инструмент аналитика, желающего увеличить доход от продажи приложения. И накапливаемая статистика событий в приложении - всего лишь первичный материал для анализа. Тот же Apsalar позволяет, например, проводить [Funnel Analysis, Engagment Analysis, Trending Analysis, Path Analysis, Event Analysis, Operational Analysis ](http://apsalar.com/apscience/features/).





Взять к примеру Funnel Analysis (воронку продаж). Если в вашем приложении пользователь должен сделать несколько шагов к совершению покупки (последовательно открыть несколько страниц, нажать несколько кнопок), то Funnel Analysis позволит увидеть, сколько пользователей (и каких именно) отсеивается на каждом шаге. Любопытно, что существуют системы монетизации, активно [использующие ](http://moneynews.ru/AuthorsArticle/14844/)подобную информацию.





Резюме. Готовых систем сбора аналитической информации для Android приложений сейчас множество, выбор широк. Многие из них бесплатные и, одновременно, обладают достойным функционалом. Подключаются подобные системы тривиально, весят "копейки" (10-30 kb), а пользу разработчику могут принести немалую. Единственное но: не у всех пользователей неограниченный трафик. Так что пользователи должны иметь возможность сбор статистики отключать.





**Update**: Полезная статья на хабре [Flurry Analytics. Как держать руку на пульсе приложения ](http://habrahabr.ru/blogs/android_development/122510/)





[Блог](http://apsalar.com/blog/)компании Apsalar.   
Еще пара сервисов: [Appoxee ](http://www.appoxee.com/), [AppFiguers ](http://www.appfigures.com/). По поводу Appoxee см. так же [how to create post app download engagement.](http://appsmarketing.mobi/deliver-post-app-download-engagement-appoxee-mobile/)





Спасибо [DV](http://derevyanko.blogspot.com/2011/07/android.html)
